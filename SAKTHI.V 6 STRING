{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "be47f4d1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Hello\n",
      "Hello\n",
      "World\n",
      "Welcome to\n",
      "           the world of Python\n",
      "\n",
      "Concatenated two different strings: HelloWorld\n",
      "\n",
      "length of the string: 10\n",
      "\n",
      "Position of ish: 4\n",
      "Position of h: 3\n",
      "\n",
      "<re.Match object; span=(0, 6), match='Madara'>\n",
      "\n",
      "False\n",
      "True\n",
      "False\n",
      "True\n",
      "\n",
      "True\n",
      "True\n",
      "\n",
      "Hello World \n",
      "\n",
      "Hello World\n",
      "\n",
      "['hi', 'hello', 'bye']\n",
      "\n",
      "10\n",
      "<class 'str'>\n",
      "\n",
      "HELLO\n",
      "world\n"
     ]
    }
   ],
   "source": [
    "# Different ways creating a string.\n",
    "\n",
    "string = 'Hello'\n",
    "print(string)\n",
    "\n",
    "string = \"Hello\"\n",
    "print(string)\n",
    "\n",
    "string1 = '''World'''\n",
    "print(string1)\n",
    "\n",
    "string2 = \"\"\"Welcome to\n",
    "           the world of Python\"\"\" # triple quotes string can extend multiple lines\n",
    "print(string2)\n",
    "print()\n",
    "\n",
    "# Concatenating two strings using + operator\n",
    "str1 = string + string1\n",
    "print(\"Concatenated two different strings:\",str1)\n",
    "print()\n",
    "\n",
    "# Finding the length of the string.\n",
    "print(\"length of the string:\",len(str1))\n",
    "print()\n",
    "\n",
    "# Extract a string using Substring.\n",
    "\n",
    "# Searching in strings using index()\n",
    "str3 = 'kashish'\n",
    "str1 = 'ish'\n",
    "str2 = 'h'\n",
    "print(\"Position of ish:\",str3.index(str1))\n",
    "print(\"Position of h:\",str3.index(str2))\n",
    "print()\n",
    "\n",
    "# Matching a String Against a Regular Expression With matches().\n",
    "from ast import Str\n",
    "import re\n",
    "Substr = 'Madara'\n",
    "str6 = 'Madara once said- Wake up to relity nothing goes as planned in this cursed world'\n",
    "print(re.match(Substr,str6))\n",
    "print()\n",
    "\n",
    "# Comparing strings.\n",
    "str8 = 'Itachi uchiha'\n",
    "str1 = 'Madara uchiha'\n",
    "str2 = str8\n",
    "print(str8 == str1)\n",
    "print(str8 == str2)\n",
    "print(str1 == str2)\n",
    "print(str8 != str1)\n",
    "print()\n",
    "\n",
    "# startsWith(), endsWith().\n",
    "string = 'Minato Namikaze'\n",
    "print(string.startswith(\"Minato\"))\n",
    "print(string.endswith(\"kaze\"))\n",
    "print()\n",
    "\n",
    "# Trimming strings with strip().\n",
    "str7 = 'Hello World hi'\n",
    "print(str7.strip(\"hi\"))\n",
    "print()\n",
    "\n",
    "# Replacing characters in strings with replace()\n",
    "string = 'Hi World'\n",
    "print(string.replace(\"Hi\",\"Hello\"))\n",
    "print()\n",
    "\n",
    "# Splitting strings with split()\n",
    "str9 = 'hi-hello-bye'\n",
    "print(str9.split(\"-\"))\n",
    "print()\n",
    "\n",
    "# Converting integer objects to Strings.\n",
    "numb = 10\n",
    "numb1 = str(numb)\n",
    "print(numb1)\n",
    "print(type(numb1))\n",
    "\n",
    "print()\n",
    "# Converting to uppercase and lowercase.\n",
    "string = 'hello'\n",
    "string1 = 'WORLD'\n",
    "print(string.upper())\n",
    "print(string1.lower())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "78bb606f",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
